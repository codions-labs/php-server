{{$controller := default .Env.PHP_CONTROLLER "" | isTrue -}}
{{$use_pinfo  := default .Env.USE_PATH_INFO  "" | isTrue -}}
{{$not_found  := default .Env.PHP_CONTROLLER "=404" -}}
{{$tail := or (and $use_pinfo "(/|$)") "$" -}}

location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to controller

    try_files $uri $uri/ {{if $controller -}}
        /index.php
        {{- if $use_pinfo -}} $uri {{- end -}}
        $is_args$args
    {{- else }}{{$not_found}}{{end}};

    location ~* [^/]\.php{{$tail}} {
        # pass the PHP scripts to FastCGI server listening on socket
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_index index.php;
        include fastcgi.conf;

        {{if $use_pinfo -}}

        fastcgi_split_path_info  ^(.+\.php)(/.+)$;

        set $path_info $fastcgi_path_info;  # Workaround for https://trac.nginx.org/nginx/ticket/321
        fastcgi_param PATH_INFO $path_info;

        try_files $uri $fastcgi_script_name =404;

        {{- else -}}
        try_files $uri =404;
        {{- end }}

        expires off;    # don't set expires on dynamic content
    }

    # deny access to . files and conf-tpl, for security
    location ~ /\.     { log_not_found off; deny all; }

    location ^~ /.well-known {
        allow all;
        auth_basic off;
    }

    {{if .Env.STATIC_EXPIRES}}expires {{ .Env.STATIC_EXPIRES }}{{end}}

    {{if default .Env.NGD_404 "" | isTrue -}}
	error_page 404 /404.html;

    location = /404.html {
        root /var/www/errors;
        internal;
    }

    location ^~ /ngd-style.css {
        alias /var/www/errors/style.css;
        access_log off;
    }

    location ^~ /ngd-sad.svg {
        alias /var/www/errors/sad.svg;
        access_log off;
    }
    {{- end}}
}

